version: "3.9"

services:
  lms_db:
    image: postgres:15
    container_name: lms_postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - lms_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  lms_app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: lms_app
    ports:
      - "${PORT}:${PORT}"
    depends_on:
      lms_db:
        condition: service_healthy
      minio:
        condition: service_healthy
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_SSLMODE: ${DB_SSLMODE}
      PORT: ${PORT}
      LOG_LEVEL: ${LOG_LEVEL}
      LOG_FORMAT: ${LOG_FORMAT}
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY_ID: ${MINIO_ACCESS_KEY_ID}
      MINIO_SECRET_ACCESS_KEY: ${MINIO_SECRET_ACCESS_KEY}
      MINIO_USE_SSL: ${MINIO_USE_SSL}
      MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME}
    networks:
      - lms_net

  keycloak-db:
    image: postgres:15
    container_name: keycloak_postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: lms
      POSTGRES_PASSWORD: lms
    ports:
        - "5433:5432"
    volumes:
      - keycloak_data:/var/lib/postgresql/data
      - ./insert.sql:/docker-entrypoint-init db.d/insert.sql
    networks:
      - lms_net

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.3
    container_name: keycloak
    command: start-dev
    depends_on:
      - keycloak-db
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak
      KC_DB_USERNAME: lms
      KC_DB_PASSWORD: lms
      KC_HOSTNAME_STRICT: "false"
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    volumes:
      - keycloak_data_app:/var/lib/keycloak_data_app/data
    ports:
      - "8081:8080"
    networks:
      - lms_net

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: lms_minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"  # API port
      - "9001:9001"  # Console port
    volumes:
      - minio_data:/data
    networks:
      - lms_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # MinIO Client for bucket creation
  minio-mc:
    image: minio/mc:latest
    container_name: lms_minio_mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      mc alias set lms-minio http://minio:9000 minioadmin minioadmin123;
      mc mb lms-minio/lms-files --ignore-existing;
      mc policy set public lms-minio/lms-files;
      exit 0;
      "
    networks:
      - lms_net

volumes:
  postgres_data:
  keycloak_data:
  keycloak_data_app:
  minio_data:

networks:
  lms_net:
